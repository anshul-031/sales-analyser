{
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "typescript": true,
    "typescriptreact": true,
    "javascript": true,
    "javascriptreact": true,
    "json": true
  },
  "github.copilot.advanced": {
    "length": 3000,
    "temperature": 0.1,
    "top_p": 1,
    "inlineSuggestEnable": true
  },
  "github.copilot.chat.followUps": "always",
  "github.copilot.chat.localeOverride": "en",
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "typescript.suggest.autoImports": true,
  "typescript.preferences.importModuleSpecifier": "relative",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.formatOnSave": true,
  "editor.inlineSuggest.enabled": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.acceptSuggestionOnEnter": "on",
  "files.associations": {
    "*.md": "markdown",
    "copilot-instructions.md": "markdown"
  },
  "emmet.includeLanguages": {
    "typescriptreact": "html",
    "javascriptreact": "html"
  },
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "tailwindCSS.includeLanguages": {
    "typescript": "typescript",
    "typescriptreact": "typescriptreact"
  },
  "tailwindCSS.experimental.classRegex": [
    ["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]
  ],
  "task.allowAutomaticTasks": "on",
  "task.quickOpen.history": 10,
  "task.saveBeforeRun": "always",
  "terminal.integrated.allowChords": false,
  "terminal.integrated.commandsToSkipShell": [
    "language-julia.interrupt"
  ],
  "jest.autoRun": {
    "watch": true,
    "onStartup": ["all-tests"]
  },
  "jest.showCoverageOnLoad": true,
  "testing.automaticallyOpenPeekView": "never",
  "testing.followRunningTest": false,
  "testing.openTesting": "neverOpen",
  "testing.automaticallyOpenTestResults": "neverOpen"
}
